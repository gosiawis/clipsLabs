(deffacts startup
    (m Tomek)
    (m Adam)
    (m Darek)
    (m Bartek)
    (m Robert)
    (m Jacek)
    (m Julek)
    (m Pawel)
    (m Adrian)
    (k Kasia)
    (k Basia)
    (k Zosia)
    (k Justyna)
    (k Ala)
    (k Ola)
    (k Ada)
    (k Ewa)
    (k Ela)
    (ojciec Jacek Ala)
    (ojciec Julek Bartek)
    (ojciec Pawel Justyna)
    (ojciec Adrian Robert)
    (ojciec Bartek Kasia)
    (ojciec Robert Tomek)
    (ojciec Tomek Adam)
    (ojciec Tomek Darek)
    (ojciec Tomek Basia)
    (ojciec Tomek Zosia)
    (matka Ola Ala)
    (matka Ada Bartek)
    (matka Ewa Justyna)
    (matka Ela Robert)
    (matka Justyna Tomek)
    (matka Ala Kasia)
    (matka Kasia Adam)
    (matka Kasia Darek)
    (matka Kasia Basia)
    (matka Kasia Zosia)
)

(defrule reg3 "dziadek"
    (and (m ?x)
    (ojciec ?x ?y)
    (or (ojciec ?y ?z)
    (matka ?y ?z)))
    =>
    (assert (dziadek ?x ?z))
)

(defrule reg4 "babcia"
    (and (k ?x)
    (matka ?x ?y)
    (or (ojciec ?y ?z)
    (matka ?y ?z)))
    =>
    (assert (babcia ?x ?z))
)

(defrule reg9 "przodek"
    (or 
        (matka ?x ?y)
        (ojciec ?x ?y)
        (dziadek ?x ?y)
        (babcia ?x ?y)
        (and
            (or
                (ojciec ?x ?z)
                (matka ?x ?z)
            )
            (or
                (dziadek ?z ?y)
                (babcia ?z ?y)
            )
        )
    )
    =>
    (assert (przodek ?x ?y))
    (printout t ?x " jest przodkiem " ?y crlf)
)